// This file was generated by nomgen.
// To regenerate, run `go generate` in this package.

package main

import (
	"github.com/attic-labs/noms/ref"
	"github.com/attic-labs/noms/types"
)

// User

type User struct {
	m types.Map
}

func NewUser() User {
	return User{types.NewMap()}
}

func UserFromVal(v types.Value) User {
	return User{v.(types.Map)}
}

// TODO: This was going to be called Value() but it collides with root.value. We need some other place to put the built-in fields like Value() and Equals().
func (s User) NomsValue() types.Map {
	return s.m
}

func (s User) Equals(p User) bool {
	return s.m.Equals(p.m)
}

func (s User) Ref() ref.Ref {
	return s.m.Ref()
}
func (s User) Id() types.String {
	return s.m.Get(types.NewString("id")).(types.String)
}

func (s User) SetId(p types.String) User {
	return UserFromVal(s.m.Set(types.NewString("id"), p))
}
func (s User) Name() types.String {
	return s.m.Get(types.NewString("name")).(types.String)
}

func (s User) SetName(p types.String) User {
	return UserFromVal(s.m.Set(types.NewString("name"), p))
}
func (s User) OAuthToken() types.String {
	return s.m.Get(types.NewString("oAuthToken")).(types.String)
}

func (s User) SetOAuthToken(p types.String) User {
	return UserFromVal(s.m.Set(types.NewString("oAuthToken"), p))
}
func (s User) OAuthSecret() types.String {
	return s.m.Get(types.NewString("oAuthSecret")).(types.String)
}

func (s User) SetOAuthSecret(p types.String) User {
	return UserFromVal(s.m.Set(types.NewString("oAuthSecret"), p))
}
