// This file was generated by nomdl/codegen.
// @flow
// eslint-disable max-len

import * as _noms from '@attic/noms';

{
  const pkg = new _noms.Package([
    _noms.makeStructType('StructWithUnions',
      [
        new _noms.Field('a', _noms.makeType(new _noms.Ref(), 1), false),
        new _noms.Field('d', _noms.makeType(new _noms.Ref(), 2), false),
      ],
      [

      ]
    ),
    _noms.makeStructType('',
      [

      ],
      [
        new _noms.Field('b', _noms.float64Type, false),
        new _noms.Field('c', _noms.stringType, false),
      ]
    ),
    _noms.makeStructType('',
      [

      ],
      [
        new _noms.Field('e', _noms.float64Type, false),
        new _noms.Field('f', _noms.stringType, false),
      ]
    ),
  ], [
  ]);
  _noms.registerPackage(pkg);
}


export interface StructWithUnions extends _noms.Struct {
  a: __unionOfBOfFloat64AndCOfString;  // readonly
  setA(value: __unionOfBOfFloat64AndCOfString): StructWithUnions;
  d: __unionOfEOfFloat64AndFOfString;  // readonly
  setD(value: __unionOfEOfFloat64AndFOfString): StructWithUnions;
}

export interface __unionOfBOfFloat64AndCOfString extends _noms.Struct {
  b: ?_noms.float64;  // readonly
  setB(value: _noms.float64): __unionOfBOfFloat64AndCOfString;
  c: ?string;  // readonly
  setC(value: string): __unionOfBOfFloat64AndCOfString;
}

export interface __unionOfEOfFloat64AndFOfString extends _noms.Struct {
  e: ?_noms.float64;  // readonly
  setE(value: _noms.float64): __unionOfEOfFloat64AndFOfString;
  f: ?string;  // readonly
  setF(value: string): __unionOfEOfFloat64AndFOfString;
}
