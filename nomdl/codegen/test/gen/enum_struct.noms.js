// This file was generated by nomdl/codegen.
// @flow
/* eslint-disable */

import {
  Field as _Field,
  Package as _Package,
  Ref as _Ref,
  createStructClass as _createStructClass,
  makeEnumType as _makeEnumType,
  makeStructType as _makeStructType,
  makeType as _makeType,
  registerPackage as _registerPackage,
} from '@attic/noms';
import type {
  Struct as _Struct,
} from '@attic/noms';

const _pkg = new _Package([
  _makeEnumType('Handedness', 'right', 'left', 'switch'),
  _makeStructType('EnumStruct',
      [
        new _Field('hand', _makeType(new _Ref(), 0), false),
      ],
      [

      ]
    ),
], [
]);
_registerPackage(_pkg);
const Handedness$type = _makeType(_pkg.ref, 0);
const Handedness$typeDef = _pkg.types[0];
const EnumStruct$type = _makeType(_pkg.ref, 1);
const EnumStruct$typeDef = _pkg.types[1];


export type Handedness =
  0 |  // right
  1 |  // left
  2;  // switch

type EnumStruct$Data = {
  hand: Handedness;
};

interface EnumStruct$Interface extends _Struct {
  constructor(data: EnumStruct$Data): void;
  hand: Handedness;  // readonly
  setHand(value: Handedness): EnumStruct$Interface;
}

export const EnumStruct: Class<EnumStruct$Interface> = _createStructClass(EnumStruct$type, EnumStruct$typeDef);
