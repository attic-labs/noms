// This file was generated by nomdl/codegen.
// @flow
/* eslint-disable */

import {
  Field as _Field,
  Package as _Package,
  Ref as _Ref,
  createStructClass as _createStructClass,
  emptyRef as _emptyRef,
  makeStructType as _makeStructType,
  makeType as _makeType,
  registerPackage as _registerPackage,
} from '@attic/noms';
import type {
  Struct as _Struct,
} from '@attic/noms';
import * as _sha1_068bb32 from './sha1_068bb32.js';


const _pkg = new _Package([
  _makeStructType('D',
    [
      new _Field('structField', _makeType(_Ref.parse('sha1-068bb32c733bd940a0d758715bf05082f4c12fcb'), 0), false),
    ],
    [

    ]
  ),
  _makeStructType('DUser',
    [
      new _Field('Dfield', _makeType(_emptyRef, 0), false),
    ],
    [

    ]
  ),
], [
  _Ref.parse('sha1-068bb32c733bd940a0d758715bf05082f4c12fcb'),
]);
_registerPackage(_pkg);
const D$type = _makeType(_pkg.ref, 0);
const D$typeDef = _pkg.types[0];
const DUser$type = _makeType(_pkg.ref, 1);
const DUser$typeDef = _pkg.types[1];


type D$Data = {
  structField: _sha1_068bb32.S;
};

interface D$Interface extends _Struct {
  constructor(data: D$Data): void;
  structField: _sha1_068bb32.S;  // readonly
  setStructField(value: _sha1_068bb32.S): D$Interface;
}

export const D: Class<D$Interface> = _createStructClass(D$type, D$typeDef);

type DUser$Data = {
  Dfield: D;
};

interface DUser$Interface extends _Struct {
  constructor(data: DUser$Data): void;
  Dfield: D;  // readonly
  setDfield(value: D): DUser$Interface;
}

export const DUser: Class<DUser$Interface> = _createStructClass(DUser$type, DUser$typeDef);
