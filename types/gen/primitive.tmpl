type {{.NomsType}} {{.GoType}}

func (p {{.NomsType}}) Equals(other Value) bool {
	return p == other
}

func (v {{.NomsType}}) Ref() ref.Ref {
	return getRef(v)
}

func (v {{.NomsType}}) Chunks() []RefBase {
	return nil
}

func (v {{.NomsType}}) ChildValues() []Value {
	return nil
}

func (v {{.NomsType}}) ToPrimitive() interface{} {
	return {{.GoType}}(v)
}

var typeFor{{.NomsType}} = MakePrimitiveType({{.NomsType}}Kind)

func (v {{.NomsType}}) Type() *Type {
	return typeFor{{.NomsType}}
}
{{if .IsOrdered}}
func (v {{.NomsType}}) Less(other OrderedValue) bool {
	return v < other.({{.NomsType}})
}
{{end}}
